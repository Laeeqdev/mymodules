# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
inputs:
  docker-user: laeeqa222
    description: "Docker user to use when uploading container"
    required: true
  image-name: laeeqa222/myrepo
    description: "Image name"
    required: true
  dockerhub-token: Laeeq4012
    description: "Dockerhub token"
    required: true
  docker-registry-url: docker.io
    description: "URL for the Docker registry"
    required: false
    default: "docker.io"
  version: latest
    description: "App version"
    required: true  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build
    - name: Build and Push Docker Image 
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.docker-registry-url }}
        username: ${{ inputs.docker-user }}
        password: ${{ inputs.dockerhub-token }}
    - name: Docker build
      run: "docker build -t ${{ inputs.docker-registry-url }}/${{ inputs.docker-user }}/${{ inputs.image-name }}:${{ inputs.version }} -t ${{ inputs.docker-registry-url }}/${{ inputs.docker-user }}/${{ inputs.image-name }}:latest ."
      shell: bash
    - name: Docker push
      run: docker push --all-tags ${{ inputs.docker-registry-url }}/${{ inputs.docker-user }}/${{ inputs.image-name }}
      shell: bash        
